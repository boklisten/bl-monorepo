name: CI
on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  install:
    name: Install & Cache Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "yarn"

      - name: Restore node_modules from cache
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            frontend/node_modules
            backend/node_modules
            shared/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Install dependencies (if no cache)
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

  code_style:
    name: Prettier Check
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4

      - name: Restore node_modules from cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            frontend/node_modules
            backend/node_modules
            shared/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}

      - name: Prettier Check
        run: yarn prettier:check

  type_check:
    name: Type Check
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4

      - name: Restore node_modules from cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            frontend/node_modules
            backend/node_modules
            shared/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}

      - name: Type Check
        run: yarn typecheck

  lint_frontend:
    name: Lint Frontend
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4

      - name: Restore node_modules from cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            frontend/node_modules
            backend/node_modules
            shared/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}

      - name: Lint Frontend
        run: yarn workspace frontend lint

  lint_backend:
    name: Lint Backend
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4

      - name: Restore node_modules from cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            frontend/node_modules
            backend/node_modules
            shared/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}

      - name: Lint Backend
        run: yarn workspace backend lint

  build_backend:
    name: Build Backend
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4

      - name: Restore node_modules from cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            frontend/node_modules
            backend/node_modules
            shared/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}

      - name: Build Backend
        run: yarn workspace backend build

  build_frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4

      - name: Restore node_modules from cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            frontend/node_modules
            backend/node_modules
            shared/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}

      - name: Build Frontend
        env:
          NEXT_PUBLIC_API_URL: https://staging.api.boklisten.no/
          NEXT_PUBLIC_BL_WEB_URL: https://staging.boklisten.no/
          NEXT_PUBLIC_BL_ADMIN_URL: https://staging.bladmin.boklisten.no/
        run: yarn workspace frontend build

  test_backend:
    name: Test Backend
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4

      - name: Restore node_modules from cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            frontend/node_modules
            backend/node_modules
            shared/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}

      - name: Test Backend
        run: yarn workspace backend test
